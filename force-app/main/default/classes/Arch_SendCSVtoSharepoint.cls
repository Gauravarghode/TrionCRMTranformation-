public class Arch_SendCSVtoSharepoint {
    
    @future(callout=true)
    public static void fileMigration(String stagingId) {
        String customSwitch = String.valueOf(System.Label.Switch); 
        HttpResponse res = new HttpResponse();
        try{
            if (stagingId != 'Test##SP') {  
                List<EmailMessageHtml__c> emailStagingList = [select Id,  EmailMessage_Id__c, Status__c, Error_Message__c, Is_Large_File__c, File_Size__c, sObject__c, 
                                                              Title__c, File_Body__c, Parent_Case_Id__c, Job_ID__c, Csv_Body__c, Csv_Body_Extension__c, Csv_String_2__c
                                                              from EmailMessageHtml__c 
                                                              WHERE Status__c = 'Not Started' AND Emailmessage_Id__c=:stagingId
                                                              LIMIT 1];
                system.debug('emailStagingList' + emailStagingList);
                
                if (emailStagingList.isEmpty()) {
                    emailStagingList = [select Id,  EmailMessage_Id__c, Status__c, Error_Message__c, Is_Large_File__c, File_Size__c, sObject__c, 
                                        Title__c, File_Body__c, Parent_Case_Id__c, Job_ID__c, Csv_Body__c, Csv_Body_Extension__c,Csv_String_2__c
                                        from EmailMessageHtml__c 
                                        WHERE Status__c = 'Pending' AND Emailmessage_Id__c=:stagingId
                                        LIMIT 1];                     
                }
                Integer statuscode;
                String jsonString;            
                Blob fileBody;
                Blob CsvBody;
                String fileName='';
                String csvId='';
                String emailMessagebody='';
                String emailMessageCsvbody='';
                String emailMessageCsvString='';
                string emailMessageCsvString3='';
                string emailMessageCsvString4='';
                string emailMessageCsvString5='';
                string emailMessageCsvString6='';
                String objectName='';
                string parentCaseId='';
                integer listSize=emailStagingList.size();
              /*  EmailMessageHtml__c currentRecord = new EmailMessageHtml__c();
                if(emailStagingList.size()>0){
                    currentRecord =emailStagingList[0];
                }  */
                for (EmailMessageHtml__c emhbl : emailStagingList) {
                    if(listSize > 0){
                        
                        fileName = emailStagingList[0].Title__c;
                        system.debug('fileName: ' +fileName);
                        csvId = fileName.substring(20, 38);
                        system.debug('String csvId: ' +csvId);
                        emailMessagebody = emailStagingList[0].File_Body__c;
                        emailMessageCsvbody = emailStagingList[0].Csv_Body__c;
                        emailMessageCsvString = emailStagingList[0].Csv_String_2__c;
                        
                        String emailMessageCsvbodyString = emailMessageCsvbody.toString();
                        String emailMessageCsvStringString = emailMessageCsvString.toString();
                        
                        
                        String concatenatedString = emailMessageCsvbodyString + emailMessageCsvStringString;
                        fileBody = Blob.valueOf(concatenatedString);
                        
                        objectName = emailStagingList[0].sObject__c;
                        parentCaseId=emailStagingList[0].Parent_Case_Id__c;
                        system.debug('String parentCaseId: ' +parentCaseId);
                    }
                }
                               
                try {
                    String sharepointFolderName = Label.SharepointfolderName;
                    String driveId = Label.SharepointDriveId;
                    String encodedDriveId = EncodingUtil.urlEncode(driveId, 'UTF-8');
                    String encodedFileName = emailStagingList[0].Title__c;
                    String encodedObjectName = emailStagingList[0].Emailmessage_Id__c;
                    String encodedParentCaseId = emailStagingList[0].Parent_Case_Id__c;
                    String endpoint = 'callout:Sharepoint/v1.0/drives/' + encodedDriveId + '/root:/' + sharepointFolderName + '/' + encodedParentCaseId + '/' + encodedObjectName + '/' + encodedFileName.replaceAll('\\+', '%20') + ':/content';                    
                    
                    Http httpCallout = new Http();
                    HttpRequest req = new HttpRequest();
                    
                    req.setEndpoint(endpoint);
                    req.setMethod('PUT');
                    req.setHeader('Content-Type', 'application/json');
                    req.setHeader('Accept', 'application/json');
                    
                    req.setBodyAsBlob(fileBody);
                    system.debug('fileBody--->' + fileBody);
                    res = httpCallout.send(req);
                    jsonString = res.getBody();
                    statuscode=res.getStatusCode();
                    
                    System.debug('Response retrieved -> ' + res.getBody());
                    System.debug('Status code -> ' + res.getStatusCode());
                    System.debug('Status -> ' + res.getStatus());
                    
                    if(res.getStatusCode() == 201 || res.getStatusCode() == 200){ 
                        
                        EmailMessageHtml__c currentRecord =emailStagingList[0];
                        //currentRecord.Id=emailStagingList[0].id;
                        currentRecord.Status__c='Completed';
                        update currentRecord;
                        //updateSharepointStatus(emailStagingList[0], res);
                        //updateSharepointStatus(emailStagingList[0], 'Completed', 'null', res);
                        System.debug('res.getStatusCode()=>' + res.getStatusCode());
                    } else{
                        String errorMessage = 'File upload failed. Status Code: ' + res.getStatusCode() + ', Response: ' + res.getBody();
                        EmailMessageHtml__c currentRecord = emailStagingList[0];
                        //currentRecord.Id=emailStagingList[0].id;
                        currentRecord.Status__c='Pending';
                        currentRecord.Error_Message__c=errorMessage;
                        update currentRecord;
                        //updateSharepointStatus(emailStagingList[0], res);
                        //updateSharepointStatus(emailStagingList[0], 'Pending', errorMessage, res);
                        System.debug('res.getStatusCode()=>' + res.getStatusCode());
                    }
                }
                catch(Exception e){
                    if(emailStagingList.size()>0){
                    EmailMessageHtml__c currentRecord = emailStagingList[0];
                    //currentRecord.Id=emailStagingList[0].id;
                    currentRecord.Status__c='Pending';
                    currentRecord.Error_Message__c='Exception Caught!';
                    update currentRecord;     
                    //updateSharepointStatus(emailStagingList[0], null);
                    //updateSharepointStatus(emailStagingList[0], ' ', 'Exception Caught!', null);
                    System.debug('Catch Exception=>' + e.getMessage());
                   
                        if(customSwitch == 'True') {                        
                            IntegrationLogInserter(currentRecord, res);
                        }
                    
                    }                    
                }
                //List<Case_Email__c> caseEmailList=new List<Case_Email__c>();
                if (statuscode == 201 || statuscode == 200){
                    
                    Map<String, Object> deserializeResponse = (Map<String, Object>) JSON.deserializeUntyped(jsonString);
                    Map<String, Object> parentReference = (Map<String, Object>) deserializeResponse.get('parentReference');
                    
                    if (deserializeResponse != null && parentReference != null) {
                        String spid = (String) deserializeResponse.get('id');
                        System.debug('id: ' +spid);
                        String spweburl = (String) deserializeResponse.get('webUrl');
                        System.debug('webUrl: ' +spweburl);                        
                        String spFolName = (String) parentReference.get('id');
                        System.debug('webUrl: ' +spFolName);                       
                    }  
                }               
            }
        }
        
        catch(Exception e){
            Integration_Log_Error__c  intLog = new Integration_Log_Error__c ();
            intLog.Name = 'Exception';
            intLog.getMessage__c = e.getMessage();
            intLog.getCause__c =String.valueOf(e.getCause());
            intLog.getLineNumber__c=String.valueOf(e.getLineNumber());
            //intLog.getNumDml__c =String.valueOf(e.getNumDml());
            intLog.getStackTraceString__c=e.getStackTraceString();            
            intLog.getTypeName__c=e.getTypeName();           
            if(intLog.Name != null) {
                insert intLog;
            }
        }
    }
    public static void updateSharepointStatus(EmailMessageHtml__c recordToUpdate, HTTPResponse res) {
        String customSwitch = String.valueOf(System.Label.Switch); 
        try{           
            if(customSwitch == 'True') {                
                //IntegrationLogInserter(recordToUpdate, res);
            }
        }
        
        catch(Exception e){
            Integration_Log_Error__c  intLog = new Integration_Log_Error__c ();
            intLog.Name = 'Exception';
            intLog.getMessage__c = e.getMessage();
            intLog.getCause__c =String.valueOf(e.getCause());
            intLog.getLineNumber__c=String.valueOf(e.getLineNumber());
            //intLog.getNumDml__c =String.valueOf(e.getNumDml());
            intLog.getStackTraceString__c=e.getStackTraceString();            
            intLog.getTypeName__c=e.getTypeName();           
            if(intLog.Name != null) {
                insert intLog;
            }
        }        
    }
    
    public static void IntegrationLogInserter(EmailMessageHtml__c emailStagingVar, HTTPResponse res) {
        
        Integration_Log_Error__c intLog = new Integration_Log_Error__c ();
        intLog.Name = emailStagingVar.Id;
        intLog.getMessage__c = 'Parent Case Id -> ' + emailStagingVar.Parent_Case_Id__c;
        
        if (res != null) {
            intLog.getCause__c = (res.getStatusCode() != null) ? 'Status code is -> ' + res.getStatusCode() : 'No status code available';
            intLog.getStackTraceString__c = 'Status is -> ' + res.getStatus();
        } else {
            intLog.getCause__c = 'HTTPResponse is null';
            intLog.getStackTraceString__c = 'No status available';
        }
        
        if (intLog.Name != null) {
            insert intLog;
        }
    }
       
    public static void testCoverage(){
        Integer i=0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        
        
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}