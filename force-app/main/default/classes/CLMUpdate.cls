public class CLMUpdate{
    @future(callout=true)
    public static void CLMupdate(){
        
        //List<EmailMessage> em = [SELECT Id, ParentId,Parent.ClosedDate FROM EmailMessage WHERE Parent.ClosedDate<LAST_N_DAYS:91 AND Parent.Failed_Record__c = false AND Parent.Processed_Record__c = false order by Parent.ClosedDate desc LIMIT 1];
        List<EmailMessage> em =  [SELECT Id, ParentId, Parent.ClosedDate, ActivityId, CreatedById, CreatedDate, LastModifiedDate, LastModifiedById, SystemModstamp, 
                                  TextBody, HtmlBody, Headers, Subject, Name, FromName, FromAddress, ValidatedFromAddress, ToAddress, CcAddress, 
                                  BccAddress, Incoming, HasAttachment, Status, MessageDate, IsDeleted, ReplyToEmailMessageId, IsPrivateDraft, 
                                  IsExternallyVisible, MessageIdentifier, ThreadIdentifier, ClientThreadIdentifier, IsClientManaged, RelatedToId, 
                                  IsTracked, IsOpened, FirstOpenedDate, LastOpenedDate, IsBounced, EmailTemplateId, Message_Size__c 
                                  FROM EmailMessage 
                                  WHERE Parent.ClosedDate < LAST_N_DAYS:91 
                                  AND Parent.Failed_Record__c = false 
                                  AND Parent.Processed_Record__c = false LIMIT 1];
        try{
        Date extactdate = null;
        if(!em.isEmpty() && em[0].Parent.ClosedDate != null){
            extactdate = em[0].Parent.ClosedDate.date();
        }
        system.debug(extactdate);
            if(extactdate!=null){
        String valuefetch = System.Label.SharepointfolderName;
        
        valuefetch = 'Case'+Datetime.now().format('ddMMyyyy');
        Arch_CustomLabelCreation_V1.updateCustomLabel('SharepointfolderName','SharePointFolderNames','en_US',valuefetch,true);
        
        
        List<Share_Point_Folder_Name__mdt> sp = [Select DeveloperName , MasterLabel , Start_Date__c , End_Date__c from Share_Point_Folder_Name__mdt order by End_Date__c DESC LIMIT 1];
        
        String Spfoldername = valuefetch;
        
        Metadata.DeployContainer container = new Metadata.DeployContainer();
        String uniqueFullName = 'Share_Point_Folder_Name.'+valuefetch;
        Metadata.CustomMetadata customMetadata = new Metadata.CustomMetadata();
        customMetadata.fullName = uniqueFullName;
        customMetadata.label = valuefetch;
        
        Metadata.CustomMetadataValue record1 = new Metadata.CustomMetadataValue();
        record1.field = 'Start_Date__c';
        record1.value = extactdate;
        customMetadata.values.add(record1);
        container.addMetadata(customMetadata);
        
        Metadata.CustomMetadataValue record2 = new Metadata.CustomMetadataValue();
        record2.field = 'End_Date__c';
        record2.value = extactdate.addDays(1);
        customMetadata.values.add(record2);
        container.addMetadata(customMetadata);     
        
        Metadata.CustomMetadataValue record3 = new Metadata.CustomMetadataValue();
        record3.field = 'Folder_Name__c';
        record3.value = Spfoldername;
        customMetadata.values.add(record3);
        container.addMetadata(customMetadata);
        
        Id asyncResultId = Metadata.Operations.enqueueDeployment(container,null); 
            }
        }catch(Exception e){
             System.debug('The following exception has occurred: ' + e.getMessage());
        }
    }
      public static void testCoverage(){
        Integer i=0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
      
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
  
}